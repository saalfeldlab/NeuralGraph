name: Lint

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: bash -l {0}  # Login shell for conda activation

jobs:
  lint:
    runs-on: ubuntu-latest

    env:
      CONDA_ENV_NAME: neural-graph-linux
      CACHE_NUMBER: 0  # Increment to force cache refresh

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache conda environment directory
      id: cache-env
      uses: actions/cache@v4
      with:
        path: /home/runner/miniconda3/envs/${{ env.CONDA_ENV_NAME }}
        key: ${{ runner.os }}-conda-env-${{ env.CACHE_NUMBER }}-${{ hashFiles('envs/environment.linux.yaml') }}
        restore-keys: |
          ${{ runner.os }}-conda-env-${{ env.CACHE_NUMBER }}-

    - name: Cache conda package downloads
      uses: actions/cache@v4
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-pkgs-${{ env.CACHE_NUMBER }}-${{ hashFiles('envs/environment.linux.yaml') }}
        restore-keys: |
          ${{ runner.os }}-conda-pkgs-

    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: "3.12"
        miniforge-version: latest
        use-mamba: true
        activate-environment: ${{ env.CONDA_ENV_NAME }}
        use-only-tar-bz2: true

    - name: Update environment (on cache miss)
      if: steps.cache-env.outputs.cache-hit != 'true'
      run: |
        echo "Cache miss - creating conda environment"
        mamba env update -n ${{ env.CONDA_ENV_NAME }} -f envs/environment.linux.yaml

    - name: Verify environment
      run: |
        conda activate ${{ env.CONDA_ENV_NAME }}
        echo "Python version:"
        python --version
        echo "Ruff version:"
        ruff --version

    - name: Run ruff check
      run: |
        conda activate ${{ env.CONDA_ENV_NAME }}
        ruff check .
